{"version":3,"sources":["webpack:///./src/images/landing_page_imgs/lome-plage.jpg","webpack:///./src/images/svg/RightArrowSVG.js","webpack:///./src/pages/index.js"],"names":["module","exports","RightArrowSVG","version","xmlns","x","y","viewBox","className","d","IndexImage","styled","div","indexImage","BlogListWrapper","props","theme","bgColor","transition","textColor","Home","data","src","allMarkdownRemark","edges","map","node","key","id","to","fields","slug","frontmatter","title","date","description","query"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,0D,gMCuC5BC,EArCO,WACpB,OACE,yBACEC,QAAQ,MACRC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,sBACRC,UAAU,cAEV,2BACE,0BACEA,UAAU,OACVC,EAAE,kWAKN,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,8B,s4DC3BN,IAAMC,EAAaC,IAAOC,IAAV,IACUC,IAItB,IAYEC,EAAkBH,IAAOC,IAAV,KACC,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,WAC3B,SAAAF,GAAK,OAAIA,EAAMC,MAAME,cAGxB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,aA4DV,SAAAJ,GAAK,OAAIA,EAAMC,MAAME,cAC3B,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,WAYxB,SAASG,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAC7B,OACE,6BACE,8BACA,kBAACX,EAAD,CAAYY,IAAKT,MACjB,6BACE,kBAAC,IAAD,KACE,qCACCQ,EAAKE,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAACZ,EAAD,KACE,yBAAKa,IAAKD,EAAKE,IACb,kBAAC,OAAD,CAAMC,GAAIH,EAAKI,OAAOC,MACpB,4BAAKL,EAAKM,YAAYC,MAAtB,MAEF,0CAAgBP,EAAKM,YAAYE,MAEjC,2BAAIR,EAAKM,YAAYG,cAEvB,kBAAC,OAAD,CAAMN,GAAIH,EAAKI,OAAOC,MACpB,yBAAKvB,UAAU,YACb,wCACA,kBAAC,EAAD,eAWX,IAAM4B,EAAK","file":"component---src-pages-index-js-2efcb0b8da80b7a24f43.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/lome-plage-45c54e859e02dc5f4a81b0ebe0727ede.jpg\";","import React from \"react\"\n\nconst RightArrowSVG = () => {\n  return (\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 268.832 268.832\"\n      className=\"rightArrow\"\n    >\n      <g>\n        <path\n          className=\"icon\"\n          d=\"M265.171,125.577l-80-80c-4.881-4.881-12.797-4.881-17.678,0c-4.882,4.882-4.882,12.796,0,17.678l58.661,58.661H12.5\n\t\tc-6.903,0-12.5,5.597-12.5,12.5c0,6.902,5.597,12.5,12.5,12.5h213.654l-58.659,58.661c-4.882,4.882-4.882,12.796,0,17.678\n\t\tc2.44,2.439,5.64,3.661,8.839,3.661s6.398-1.222,8.839-3.661l79.998-80C270.053,138.373,270.053,130.459,265.171,125.577z\"\n        />\n      </g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n    </svg>\n  )\n}\n\nexport default RightArrowSVG\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport styled from \"styled-components\"\nimport RightArrow from \"../images/svg/RightArrowSVG\"\nimport indexImage from \"../images/landing_page_imgs/lome-plage.jpg\"\n\nconst IndexImage = styled.div`\n  background-image: url(${indexImage});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  ${\"\" /* width: 900px; */}\n  height: 1000px;\n\n  @media screen and (max-height: 800px) {\n    height: 800px;\n  }\n\n  @media screen and (max-height: 500px) {\n    height: 500px;\n  }\n`\n\nconst BlogListWrapper = styled.div`\n  background-color: ${props => props.theme.bgColor};\n  transition: ${props => props.theme.transition};\n  margin: 20px 0 25px;\n  a {\n    color: ${props => props.theme.textColor};\n    text-decoration: none;\n    h2 {\n      margin: 5px 0 10px;\n      font-size: 1.8rem;\n      color: black;\n    }\n    h3 {\n      font-size: 1rem;\n      font-weight: 300;\n      margin: 8px 0 15px;\n    }\n    h4 {\n      font-size: 0.9rem;\n      margin: 8px 0 15px;\n      color: black;\n    }\n    h5 {\n      font-size: 0.85rem;\n      margin: 3px 0 15px;\n      color: black;\n    }\n    ul {\n      list-style-type: none;\n      display: flex;\n      flex-direction: row;\n      color: purple;\n      margin-bottom: 5px;\n      height: auto;\n      .listingTag {\n        font-size: 0.8rem;\n        h5 {\n          color: red;\n        }\n      }\n    }\n    p {\n      margin-bottom: 20px;\n      color: black;\n    }\n    .readMore {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: space-around;\n      width: 102px;\n      height: 37px;\n      margin: -10px 0 -10px;\n      padding: 8px;\n      background-color: lightgray;\n      transition: 0.3s;\n      p {\n        background-color: rgba(0, 0, 0, 0);\n        color: black;\n        margin: 0;\n        font-size: 0.85rem;\n      }\n      .rightArrow {\n        height: 15px;\n        .icon {\n          transition: ${props => props.theme.transition};\n          fill: ${props => props.theme.bgColor};\n        }\n      }\n    }\n  }\n  &:hover {\n    .readMore {\n      box-shadow: 0 1px 4px #4d4d4d;\n    }\n  }\n`\n\nexport default function Home({ data }) {\n  return (\n    <div>\n      <div></div>\n      <IndexImage src={indexImage} />\n      <div>\n        <Layout>\n          <h1>Posts</h1>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <BlogListWrapper>\n              <div key={node.id}>\n                <Link to={node.fields.slug}>\n                  <h2>{node.frontmatter.title} </h2>\n                </Link>\n                <h4>Published: {node.frontmatter.date}</h4>\n                {/* <h5>{node.frontmatter.tags}</h5> */}\n                <p>{node.frontmatter.description}</p>\n              </div>\n              <Link to={node.fields.slug}>\n                <div className=\"readMore\">\n                  <p>Read more</p>\n                  <RightArrow />\n                </div>\n              </Link>\n            </BlogListWrapper>\n          ))}\n        </Layout>\n      </div>\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        url\n        image\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n            description\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}